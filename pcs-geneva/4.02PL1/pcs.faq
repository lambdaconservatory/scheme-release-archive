From mvuilleu@cui.unige.ch Fri Apr 22 08:47:56 EDT 1994
Article: 8619 of comp.lang.scheme
Xref: glinda.oz.cs.cmu.edu comp.lang.scheme:8619
Newsgroups: comp.lang.scheme
Path: honeydew.srv.cs.cmu.edu!das-news.harvard.edu!noc.near.net!MathWorks.Com!europa.eng.gtefsd.com!howland.reston.ans.net!pipex!zaphod.crihan.fr!jussieu.fr!univ-lyon1.fr!swidir.switch.ch!news.unige.ch!cui.unige.ch!mvuilleu
From: mvuilleu@cui.unige.ch (VUILLEUMIER Marc)
Subject: FAQ about PC-Scheme/Geneva
Message-ID: <1994Apr22.100931.20256@news.unige.ch>
Keywords: Scheme PC FAQ
Sender: usenet@news.unige.ch
Organization: Geneva University, Switzerland
Date: Fri, 22 Apr 1994 10:09:31 GMT
Lines: 289

Dear Schemers,

Here is the first FAQ list specific to PC/Scheme-Geneva.

--- Why this FAQ ?

Due to a mailbox problem, I didn't get any mail addressed to 'schemege'
between December and March. Then the day when I received one hundred of
'lost' messages, I decided to write down this FAQ...

Most questions I received are answered here. Some specific problems
will be answered directly; please be patient...
Bug hunting will now start again. I received a dozen bug reports, so again
please be patient...

Frequently Asked Questions about PC-Scheme/Geneva
=================================================

Table of contents
-----------------
1) General informations
   - What is PCS/GE ?
   - What is the last release ?
   - What hardware & operating system is supported ?
   - How to get it ?
   - How to contact PCS/GE's team ?
2) Distribution
   - What is the format of archive files ?
   - What files are available ?
   - What documentation is available ?
3) Documentation
   - How to print the documentation using postscript ?
   - How to print the reference card ?
   - How to print the documentation using .dvi files ?
   - How to rebuild .dvi files using .tex source files ?
4) To get the best
   - How to configurate my machine to be the best for PCS/GE ?
   - Are there command line arguments ?

1) ******************** General informations ********************

- What is PCS/Ge ?

    PCS/Geneva is a free product developed by a team at the u. of Geneva.
    It is based upon, but differs somewhat from, Texas Instrument's PCS 3.03. 
    The enhancements include:
	* 80486 support & overall cleaning of the system
	* a powerful graphics interface (Borland's BGI)
	* mouse support (including for Scheme-written interrupt routines)
	* several powerful Scheme-oriented editors

- What is the last release ?

    Current release is 4.02PL1, dated end 1993. The 4.02PL2 will be
    available as soon as some of the reported bugs get fixed.

- What hardware & operating system is supported ?

    PCS/Geneva 4.02PL1 has been tested on a wide variety of machines, 
    including HP palmtops, Sun's with a DOS emulator, DOS compatibility 
    boxes within OS/2, DOS windows within Microsoft Windows, old 8086 PCs, 
    Acorn Archimedes with 286 emulator, and many others...

    PCS/Geneva works under these environments BUT ONLY AS A DOS PROGRAM.
    If you really regret this, why don't you get the source code and
    do the job yourself ?  :-)

    Several people reported problems using cheap 286-based computers
    with math coprocessor; we tracked down this on one cheap 486-based
    computer and finally found that the coprocessor hardware interrupt
    was not well wired on the mainboard... It seems that not many
    programs use it, but we do need it for numerical exceptions
    (we use Borland C floating points libraries).

- How to get it ?

    PC-Scheme/Geneva is available by anonymous ftp on cui.unige.ch
    Ask your friends if you don't now how to use 'ftp'. Don't forget
    to turn ftp to binary mode before the transfer or you'll never
    be able to expand the archive files.
    The subdirectory /pub/pcs contains the latest available release
    of PC-Scheme/Geneva, including documentation and this FAQ.

    We have a mailing list for sending bug fixes or messages such as 
    this one; if you are new to PCS/Geneva, tell us your e-mail !

    The FTP server was down some time ago, but everything should be okay
    now. If it doesn't work today, retry tomorrow !

    If and ONLY if you have no access to an internet node with 'ftp',
    but you have an E-mail address (like CompuServe users), send us
    a message and we'll send you an UUencoded version of the file
    you want.

- How to contact PCS/GE's team ?

    There is a general address for PCS/Geneva: 'schemege@cui.unige.ch'.
    We accept any message -- flames, congratulations, etc. -- and try to
    respond quickly. The developers can also be reached individually as
    'lbartho@cui.unige.ch' and 'mvuilleu@cui.unige.ch'.
    Feel free to write your message in french, english or german.

2) ******************** Distribution ********************

- What is the format of archive files ?

    Archive files are available as self-extracting archives (*.exe)
    (compressed using ARJ, but you won't need it) and as g-zipped
    tar files (*.taz) (first decompress it with Gnu-zip, and then
    use 'tar -xf ...' to get the whole directory tree).

- What files are available ?

    The PCSCHEME archive contains the executable files, precompiled 
    libraries and TeX/PostScript documentation on extensions, as well 
    as an exhaustive reference card. The archive's size is around 800kb, 
    including documentation.

    The SOURCES archive contains the source files, for use with Borland 
    C++ programming tools. PCS/Geneva is written in C, C++, Assembler 
    and Scheme. This archive's size is about 800kb too.

- What documentation is available ?

    Documentation for PC-Scheme/Geneva extensions is located in the
    /doc subdirectory of the PCSCHEME archive: 
	MANUAL.*	is the manual for main extensions (mouse support,
			the editor 'ed' and the BGI interface)
	SCHEME.*	is the log file for minor enhancements and
			describe all other added functions
    See 'How to print the documentation' in this FAQ for more details.

    Additional documents of interest are:
        * Scheme FAQ : see the newsgroup 'comp.lang.scheme'
        * R4RS : the Revised^4 Report on Algorithmic Language Scheme, which
	         gives a nice overview of what Scheme is.
	         It is available on the official Scheme repository:
	           STATES : 'cs.indiana.edu' under /pub/scheme-repository/doc
	           EUROPE : 'ftp.inria.fr' under /lang/Scheme
        * PC Scheme: Users Guide and Language Reference Manual, Trade Edition
	       (Texas Instruments), 416 pp, 1990 MIT Press, ISBN 0-262-70040-9

3) ******************** Documentation ********************

- How to print the documentation using postscript ?

    Use only files with the '.ps' extension. 
    * If you have a postscript printer, you should be able to print them 
      directly; see the next question about the refernce card.
    * If you don't have a postscript printer, use GhostScript or a similar
      postscript interpreter. GhostScript is a GNU software, free to use,
      and should give good results for all kind of printers.

- How to print the reference card ?

    The reference card is the most special part of our documentation.
    It is a 4-pages (2 x 2 sides) document with 4 columns on each page.
    It contains text written in small fonts, so you'll need AT LEAST 
    300 dpi to get a readable copy.

    It was originally 3 columns-wide on an DIN A4 Landscape, but we had
    to add more things on it (since it is an exhaustive list of all
    PCS/Geneva functions), so we added one more column on each page.
    As a consequence, it has still the same height as A4-landscape,
    but is as wide as A3-landscape (ie. twice the width of A4-portrait).

    The easiest way to print it is to use a A3 printer if you have one
    (for instance the Canon A3 printer using 600dpi give excellent results).

    If you have only a standard A4 printer, the easiest way is to print 
    refcard by steps of two columns, and to put them together using any
    A3 copier (don't tell me you can't find one...). To do this, either
    1) use "dvips" and specify the origin of the document using the -O y,x
       command-line argument (the exact value will depend on your printer)
      or 
    2) edit the postscript file, remove the line containing the "a3tray"
       command, and print it. Then edit the postscript file again,
       and add after each line containing "%%Page:" the following text:
	-550 0 translate
       Print the document again and you'll get the right half of the pages.
       
- How to print the documentation using .dvi files ?

    DVI stands for DeVice-Independent. It can be printed on any printer.
    You can convert the dvi file to postscript using "dvips" or a similar
    utility, and then send it to a postscript printer/interpreter.
    If you prefer to print the dvi directly to your non-postscript printer,
    use the adequate program (dviljet, dvidot...)

- How to rebuild .dvi files using .tex source files ?

    All .tex files should be compiled with LaTeX 2.09 with NFSS II or
    LaTeX 2e. The \mediumseries and \normalshape commands are part of
    NFSS II (New Font Selection Scheme), which is not always present
    with LaTeX 2.09 but is always included in LaTeX 2e.
    The "ps2" style, used in the refcard, is not necessary (it is only
    used for the Canon A3 printer).

    For more details on using LaTeX, ask you local guru.

4) ******************** To get the best ********************

- How to configurate my machine to be the best for PCS/GE ?

    You can run PCS/Geneva on very small systems (such as HP95LX) but it
    will be 'pretty slow' and you might get a problem when running process 
    involving a large amount of memory if you use the internal scheme-written 
    editors.

    On a 386[sx] (or 486) computer with 2 Mb memory, you can have a very 
    comfortable configuration:
    - Use PC/MS-DOS 5.00 (or followups) with the DOS=HIGH config line
    - Use an expanded memory manager (EMM386, or better QEMM) in order to
      leave as much conventional memory as possible for Scheme (you should 
      be able to have at least 580Kb free, even when a complete Novell network
      is loaded).
    - Leave 500Kb of EXTENDED memory free for swapping PCS out of memory 
      during (DOSCALL ...); it is much faster than swapping to disk, and 
      you'll really appreciate it if you use external editors (such as 
      BRIEF or EDLISP).

    You might also try to give EXPANDED memory to scheme (PCS can use
    up to 2 Mb memory), but *** it is not always reliable *** !
    Most of the bugs tracked down until now were due to the pagination 
    system. So, first try to free as much conventional memory as you can 
    (I have 638 Kb free on my computer...)

    For our students, we use HD-less 386-based computers connected to a Novell
    Network, with read-only access. Each student has its own boot disk where
    he also saves his programs.

- Are there command line arguments ?

    The calling sequence is:

              pcs [/betadebug] [startup-file] [scheme-object ...]

    The [/betadebug] parameter turn on verbose mode during initialization
    (use it if your system hangs up at startup) and primes the Virtual 
    Machine debugger before the bootstrap, typically for debugging very 
    low-level primitives.

    The PCS system directory PCS-SYSDIR is the one where PCS can find the 
    file BOOTSTRAP.APP which contains the complete scheme evaluator.

    Right after bootstrapping, the file PATCH.PCS in the PCS system 
    directory is loaded (if there is any). It can be either source or 
    fast-load scheme code.

    Since PCS/GE 4.02PL1, distribution includes a PATCH.PCS file in fast-load
    format (source is included in SOURCES\S\PATCH.S) which is responsible for
    detecting the CPU type and to protect the BGI interface against more than
    one call to INIT-GRAPH without CLOSE-GRAPH.

    If the [startup-file] is omitted, SCHEME.INI of current directory is 
    loaded just before giving the control to the user; otherwise the 
    startup file is loaded (it can be either source or fast-load scheme code).

    Anyway, all arguments can be found as a list of string bound by
    PCS-INITIAL-ARGUMENTS in the global environment. Each of these string can
    be transformed into a scheme object using (READ (OPEN-INPUT-STRING ...)).
    In particular, if you write

	pcs (hello my) (dear friend)

    PCS-INITIAL-ARGUMENTS will contains

	("(hello my)" "(dear friend)")

   i.e. the whole lists are grouped in one string, even if DOS says there 
        are two or more arguments.

//////////////////////////////////////////////////////////////////////////////

P.S. (for old friends): Please forget our previous mail address and use
                        only the new one: schemege@cui.unige.ch

//////////////////////////////////////////////////////////////////////////////
C.U.I. - Scheme group	|  Larry Bartholdi	   |  Marc Vuilleumier
University of Geneva	|  Barillette 11	   |  Clef-des-Champs 10
General Dufour 24	|  1260 NYON		   |  1234 VESSY
1211 GENEVE 4		|  Switzerland		   |  Switzerland
Switzerland		|  phone: +41 22 361-02-22 |  phone: +41 22 784-36-82
phone: +41 22 705-76-60	|  lbartho@cui.unige.ch    |  fax:   +41 22 784-02-29
schemege@cui.unige.ch   |			   |  mvuilleu@cui.unige.ch
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\





